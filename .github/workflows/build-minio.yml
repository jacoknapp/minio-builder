name: Build MinIO Image

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/jacoknapp/minio

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest MinIO release
        id: minio
        shell: bash
        run: |
          set -euo pipefail
          # Get latest release tag from GitHub API
          latest_tag=$(curl -s https://api.github.com/repos/minio/minio/releases/latest | jq -r '.tag_name')
          sanitized_tag=$(echo "$latest_tag" | tr '[:upper:]' '[:lower:]')
          echo "latest_tag=$latest_tag" >> "$GITHUB_OUTPUT"
          echo "sanitized_tag=$sanitized_tag" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Check if release tag already published
        id: check-manifest
        shell: bash
        env:
          SANITIZED_TAG: ${{ steps.minio.outputs.sanitized_tag }}
        run: |
          if docker manifest inspect "${{ env.IMAGE_NAME }}:${SANITIZED_TAG}" >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create and push multi-arch manifest
        if: steps.check-manifest.outputs.exists != 'true'
        shell: bash
        env:
          SOURCE_TAG: ${{ steps.minio.outputs.latest_tag }}
          SANITIZED_TAG: ${{ steps.minio.outputs.sanitized_tag }}
        run: |
          set -euo pipefail
          
          # Create and push manifest for versioned tag
          docker buildx imagetools create -t ${{ env.IMAGE_NAME }}:${SANITIZED_TAG} \
            minio/minio:${SOURCE_TAG}
          
          # Create and push manifest for latest tag
          docker buildx imagetools create -t ${{ env.IMAGE_NAME }}:latest \
            minio/minio:${SOURCE_TAG}

      - name: Publish summary
        shell: bash
        run: |
          if [ "${{ steps.check-manifest.outputs.exists }}" = "true" ]; then
            echo "MinIO release ${{ steps.minio.outputs.latest_tag }} already exists in ${{ env.IMAGE_NAME }}." >> "$GITHUB_STEP_SUMMARY"
          else
            echo "Published ${{ env.IMAGE_NAME }}:${{ steps.minio.outputs.sanitized_tag }} from MinIO release ${{ steps.minio.outputs.latest_tag }}." >> "$GITHUB_STEP_SUMMARY"
